version: 1.0.{build}
image: Visual Studio 2019
branches:
  only:
  - master
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  version_prefix: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'
before_build:
  - cmd: dotnet --version
  - cmd: dotnet new tool-manifest
  - cmd: dotnet tool install dotnet-sonarscanner
build_script:
  - cmd: dotnet restore ./src/Microservices.Boilerplate/Microservices.Boilerplate.csproj --verbosity m
  - cmd: dotnet build ./src/Microservices.Boilerplate/Microservices.Boilerplate.csproj --verbosity m
after_build:
  - cmd: dotnet pack ./src/Microservices.Boilerplate/Microservices.Boilerplate.csproj /p:Version=%APPVEYOR_BUILD_VERSION%
test_script:
  # restore packages for our unit tests
  - cmd: dotnet restore ./src/Microservices.BoilerplateTests/Microservices.BoilerplateTests.csproj --verbosity m
  - cmd: dotnet dotnet-sonarscanner begin /k:statemachine-service /d:sonar.organization=juanroman /d:sonar.projectKey=juanroman_microservices-boilerplate /d:src/Microservices.BoilerplateTests/coverage.opencover.xml /d:sonar.host.url=https://sonarcloud.io /d:sonar.login=2b31957f85041c08196faca383b0ce332a3883df
  - cmd: dotnet build
  - cmd: dotnet test ./src/Microservices.BoilerplateTests/Microservices.BoilerplateTests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
  - cmd: dotnet dotnet-sonarscanner end /d:sonar.login=2b31957f85041c08196faca383b0ce332a3883df
artifacts:
  - path: '**\*.nupkg'
deploy: off
